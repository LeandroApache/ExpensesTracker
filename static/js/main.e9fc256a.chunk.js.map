{"version":3,"sources":["Components/Expenses/ExpensesList/ExpenseItem/ExpenseDate/ExpenseDate.tsx","Components/UI/Card.tsx","Components/Expenses/ExpensesList/ExpenseItem/ExpenseItem.tsx","Components/Expenses/ExpensesList/ExpensesList.tsx","Components/Expenses/ExpensesFilter/ExpensesFilter.tsx","Components/Expenses/ExpensesChart/ChartBar/ChartBar.tsx","Components/Expenses/ExpensesChart/Chart/Chart.tsx","Components/Expenses/ExpensesChart/ExpensesChart.tsx","Components/Expenses/Expenses.tsx","Components/NewExpense/NewExpenseForm/NewExpenseForm.tsx","Components/NewExpense/NewExpense.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","price","ExpensesList","expenses","length","map","ex","id","amount","ExpensesFilter","htmlFor","name","value","filterValue","onChange","e","onChangeFilter","target","ChartBar","barFillHeight","maxValue","style","height","label","Chart","amountsArray","chartDataPoints","el","maxAmount","Math","max","ExpensesChart","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","newFilterValue","NewExpenseForm","enteredText","setEnteredText","enteredPrice","setEnteredPrice","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpenseData","Date","onSaveExpenseData","onHideForm","alert","type","currentTarget","min","step","onClick","NewExpense","isCollapsed","setIsCollapsed","expenseData","newExpense","v4","onAddExpense","App","setExpenses","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9fc256a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './ExpenseDate.css';\r\n\r\nexport type expenseDatePropsType = {\r\n  date: Date\r\n}\r\n\r\nexport function ExpenseDate(props: expenseDatePropsType) {\r\n  const month = props.date.toLocaleString(\"en-US\", {month: 'long'});\r\n  const day = props.date.toLocaleString(\"en-US\", {day: 'numeric'});\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className={\"expense-date\"}>\r\n      <div className={\"expense-date__month\"}>{month}</div>\r\n      <div className={\"expense-date__year\"}>{year}</div>\r\n      <div className={\"expense-date__day\"}>{day}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport './Card.css';\r\n\r\nexport type cardPropsType = {\r\n  className: string\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function Card(props: cardPropsType) {\r\n  let classes = 'card ' + props.className\r\n  return(\r\n    <div className={classes}>{props.children}</div>\r\n  )\r\n}","import React from \"react\";\r\nimport './ExpenseItem.css';\r\nimport {ExpenseDate} from \"./ExpenseDate/ExpenseDate\";\r\nimport {Card} from \"../../../UI/Card\";\r\n\r\nexport type expenseItemPropsType = {\r\n  title: string\r\n  date: Date\r\n  price: number\r\n  id: string\r\n}\r\n\r\nexport function ExpenseItem(props: expenseItemPropsType) {\r\n  return (\r\n      <Card className={\"expense-item\"}>\r\n        <ExpenseDate date={props.date}/>\r\n        <h2 className={\"expense-item__title\"}>\r\n          {props.title}\r\n        </h2>\r\n        <div className={\"expense-item__price\"}>\r\n          ${props.price}\r\n        </div>\r\n      </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {ExpenseItem} from \"./ExpenseItem/ExpenseItem\";\r\nimport {expensesType} from \"../../../App\";\r\n\r\nexport type expensesListPropsType = {\r\n  expenses: Array<expensesType>\r\n}\r\n\r\nexport function ExpensesList(props: expensesListPropsType) {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className={\"expenses-list__fallback\"}>No expenses found</h2>\r\n  }\r\n\r\n  return (\r\n    <div className={'expenses-list'}>\r\n      {props.expenses.map(ex => <ExpenseItem key={ex.id} id={ex.id} title={ex.title} date={ex.date}\r\n                                             price={ex.amount}/>)}\r\n    </div>\r\n  )\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport './ExpensesFilter.css';\r\n\r\nexport type expensesFilterPropsType = {\r\n  filterValue: string\r\n  onChangeFilter: (newFilterValue: string) => void\r\n}\r\n\r\nexport function ExpensesFilter(props: expensesFilterPropsType) {\r\n\r\n  const changeFilterHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    props.onChangeFilter(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={\"expenses-filter\"}>\r\n      <div className={\"expenses-filter__control\"}>\r\n        <label htmlFor=\"years\">Filter by years</label>\r\n        <select name=\"years\" id=\"years\" value={props.filterValue} onChange={changeFilterHandler}>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nexport type chartBarPropsType = {\r\n  value: number\r\n  label: string\r\n  maxValue: number\r\n}\r\n\r\nexport function ChartBar(props: chartBarPropsType) {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = props.value / props.maxValue * 100 + \"%\";\r\n  }\r\n  return (\r\n    <div className={'chart-bar'}>\r\n      <div className={'chart-bar__inner'}>\r\n        <div className={'chart-bar__fill'} style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className={'chart-bar__label'}>{props.label}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport './Chart.css';\r\nimport {dataPointsType} from \"../ExpensesChart\";\r\nimport {ChartBar} from \"../ChartBar/ChartBar\";\r\n\r\nexport type chartPropsType = {\r\n  chartDataPoints: Array<dataPointsType>\r\n}\r\n\r\nexport function Chart(props: chartPropsType) {\r\n  let amountsArray = props.chartDataPoints.map(el=>el.amount);\r\n  let maxAmount = Math.max(...amountsArray);\r\n  return (\r\n    <div className={'chart'}>\r\n      {\r\n        props.chartDataPoints.map(el => <ChartBar\r\n          key={el.label}\r\n          value={el.amount}\r\n          maxValue={maxAmount}\r\n          label={el.label}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport './ExpensesChart.css';\r\nimport {Chart} from \"./Chart/Chart\";\r\nimport {expensesType} from \"../../../App\";\r\n\r\nexport type expensesChartPropsType = {\r\n  expenses:Array<expensesType>\r\n}\r\n\r\nexport type dataPointsType = {\r\n  label: string\r\n  amount: number\r\n}\r\n\r\nexport function ExpensesChart(props: expensesChartPropsType) {\r\n  const chartDataPoints: Array<dataPointsType> = [\r\n    {label: \"Jan\", amount: 0},\r\n    {label: \"Feb\", amount: 0},\r\n    {label: \"Mar\", amount: 0},\r\n    {label: \"Apr\", amount: 0},\r\n    {label: \"May\", amount: 0},\r\n    {label: \"Jun\", amount: 0},\r\n    {label: \"Jul\", amount: 0},\r\n    {label: \"Aug\", amount: 0},\r\n    {label: \"Sep\", amount: 0},\r\n    {label: \"Oct\", amount: 0},\r\n    {label: \"Nov\", amount: 0},\r\n    {label: \"Dec\", amount: 0},\r\n  ]\r\n\r\n  for (let expense of props.expenses) {\r\n    let monthIndex = expense.date.getMonth();\r\n    chartDataPoints[monthIndex].amount += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <Chart chartDataPoints={chartDataPoints}/>\r\n  )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {ExpensesList} from \"./ExpensesList/ExpensesList\";\r\nimport {expensesType} from \"../../App\";\r\nimport {ExpensesFilter} from \"./ExpensesFilter/ExpensesFilter\";\r\nimport {ExpensesChart} from \"./ExpensesChart/ExpensesChart\";\r\n\r\nexport type expensesPropsType = {\r\n  expenses: Array<expensesType>\r\n}\r\n\r\nexport function Expenses(props: expensesPropsType) {\r\n  const [filteredYear, setFilteredYear] = useState<string>(\"2021\");\r\n\r\n  const filterChangeHandler = (newFilterValue: string) => {\r\n    setFilteredYear(newFilterValue);\r\n  }\r\n\r\n  let filteredExpenses: Array<expensesType> = props.expenses.filter(ex => ex.date.getFullYear().toString() === filteredYear);\r\n\r\n  return (\r\n    <div className={\"expenses\"}>\r\n      <ExpensesFilter filterValue={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList expenses={filteredExpenses}/>\r\n    </div>\r\n  )\r\n}\r\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport './NewExpenseForm.css';\r\n\r\nexport type newExpenseFormPropsType = {\r\n  onSaveExpenseData: (expenseData: expenseDataType) => void\r\n  onHideForm: ()=> void\r\n}\r\n\r\nexport type expenseDataType = {\r\n  title: string\r\n  amount: number\r\n  date: Date\r\n}\r\n\r\nexport function NewExpenseForm(props: newExpenseFormPropsType) {\r\n  const [enteredText, setEnteredText] = useState<string>(\"\");\r\n  const [enteredPrice, setEnteredPrice] = useState<string>(\"\");\r\n  const [enteredDate, setEnteredDate] = useState<string>(\"\");\r\n\r\n  const titleChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEnteredText(e.currentTarget.value);\r\n  }\r\n  const priceChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEnteredPrice(e.currentTarget.value);\r\n  }\r\n  const dataChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEnteredDate(e.currentTarget.value);\r\n  }\r\n\r\n  const saveEnteredDataHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!enteredText || !enteredPrice || !enteredDate) {\r\n      alert(\"Invalid input\");\r\n    } else {\r\n      const newExpenseData = {\r\n        title: enteredText,\r\n        amount: +enteredPrice,\r\n        date: new Date(enteredDate)\r\n      }\r\n      props.onSaveExpenseData(newExpenseData);\r\n      props.onHideForm();\r\n    }\r\n    setEnteredDate(\"\");\r\n    setEnteredPrice(\"\");\r\n    setEnteredText(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={saveEnteredDataHandler}>\r\n      <div className={\"new-expense__controls}\"}>\r\n        <div className={'new-expense__control'}>\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input id={'text'} type=\"text\" onChange={titleChangeHandler} value={enteredText}/>\r\n        </div>\r\n        <div className={'new-expense__control'}>\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input id={'price'} type=\"number\" min='0.01' step='0.01' onChange={priceChangeHandler} value={enteredPrice}/>\r\n        </div>\r\n        <div className={'new-expense__control'}>\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input id={'date'} type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dataChangeHandler}\r\n                 value={enteredDate}/>\r\n        </div>\r\n      </div>\r\n      <div className={'new-expense__actions'}>\r\n        <button type={'button'} onClick={props.onHideForm}>Cancel</button>\r\n        <button type={\"submit\"}>Add expense</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport './NewExpense.css';\r\nimport {expenseDataType, NewExpenseForm} from \"./NewExpenseForm/NewExpenseForm\";\r\nimport {expensesType} from \"../../App\";\r\nimport {v4} from \"uuid\";\r\nimport {Card} from \"../UI/Card\";\r\n\r\nexport type newExpensePropsType = {\r\n  onAddExpense: (newExpense: expensesType) => void\r\n}\r\n\r\nexport function NewExpense(props: newExpensePropsType) {\r\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(true);\r\n  const saveExpenseDataHandler = (expenseData: expenseDataType) => {\r\n    const newExpense = {\r\n      ...expenseData,\r\n      id: v4()\r\n    }\r\n    props.onAddExpense(newExpense);\r\n  }\r\n  const showFormHandler = () => {\r\n    setIsCollapsed(false);\r\n  }\r\n  const hideFormHandler = () => {\r\n    setIsCollapsed(true);\r\n  }\r\n  return (\r\n    <Card className={'new-expense'}>\r\n        {!isCollapsed && <NewExpenseForm onSaveExpenseData={saveExpenseDataHandler} onHideForm={hideFormHandler}/>}\r\n        {isCollapsed && <button onClick={showFormHandler}>Add new expense</button>}\r\n    </Card>\r\n  )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {v4} from 'uuid';\r\nimport './App.css';\r\nimport {Expenses} from \"./Components/Expenses/Expenses\";\r\nimport {NewExpense} from \"./Components/NewExpense/NewExpense\";\r\n\r\nexport type expensesType = {\r\n  id: string\r\n  title: string\r\n  amount: number\r\n  date: Date\r\n}\r\n\r\nexport function App() {\r\n\r\n  const [expenses, setExpenses] = useState<Array<expensesType>>([\r\n    {id: v4(), title: \"Tablet\", amount: 380, date: new Date(2020, 2, 12)},\r\n    {id: v4(), title: \"Iphone\", amount: 400, date: new Date(2019, 3, 22)},\r\n    {id: v4(), title: \"Book\", amount: 15, date: new Date(2021, 10, 14)},\r\n    {id: v4(), title: \"IT Courses\", amount: 140, date: new Date(2021, 11, 17)},\r\n    {id: v4(), title: \"Tickets on the concert\", amount: 40, date: new Date(2019, 7, 7)},\r\n    {id: v4(), title: \"Headphones\", amount: 60, date: new Date(2021, 4, 30)},\r\n  ])\r\n  console.log(typeof expenses[0].date.getFullYear())\r\n\r\n  const addExpenseHandler = (newExpense: expensesType) => {\r\n    setExpenses([newExpense, ...expenses]);\r\n  }\r\n\r\n  return (\r\n    <div className={\"App\"}>\r\n      <NewExpense onAddExpense={addExpenseHandler}/>\r\n      <Expenses expenses={expenses}/>\r\n      <Expenses expenses={expenses}/>\r\n      <Expenses expenses={expenses}/>\r\n    </div>\r\n  )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}